gui:
  #scrollHeight: 2
  #scrollPastBottom: true # enable scrolling past the bottom
  sidePanelWidth: 0.3
  #expandFocusedSidePanel: false
  #mainPanelSplitMode: 'flexible'
  #language: 'auto'
  theme:
    #lightTheme: false
    activeBorderColor:
      - white
      - bold
    inactiveBorderColor:
      - green
    optionsTextColor:
      - blue
    selectedLineBgColor:
      - default
    selectedRangeBgColor:
      - blue
    cherryPickedCommitBgColor:
      - blue
    cherryPickedCommitFgColor:
      - cyan
  #commitLength:
  #  show: true
  #mouseEvents: true
  #skipUnstageLineWarning: false
  #skipStashWarning: false
  #showFileTree: true # for rendering changes files in a tree format
  #showListFooter: true # for seeing the '5 of 20' message in list panels
  #showRandomTip: true
  #showCommandLog: true
  #commandLogSize: 8
#git:
#  paging:
#    colorArg: always
#    useConfig: false
#  commit:
#    signOff: false
#  merging:
#    # only applicable to unix users
#    manualCommit: false
#    # extra args passed to `git merge`, e.g. --no-ff
#    args: ''
#  log:
#    # one of date-order, author-date-order, topo-order.
#    # topo-order makes it easier to read the git log graph, but commits may not
#    # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
#    order: 'topo-order'
#    # one of always, never, when-maximised
#    # this determines whether the git graph is rendered in the commits panel
#    showGraph: 'when-maximised'
#  skipHookPrefix: WIP
#  autoFetch: true
#  branchLogCmd: 'git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --'
#  allBranchesLogCmd: 'git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium'
#  overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
#  disableForcePushing: false
#  parseEmoji: false
#  diffContextSize: 3 # how many lines of context are shown around a change in diffs
#os:
#  editCommand: '' # see 'Configuring File Editing' section
#  editCommandTemplate: '{{editor}} {{filename}}'
#  openCommand: ''
#refresher:
#  refreshInterval: 10 # file/submodule refresh interval in seconds
#  fetchInterval: 60 # re-fetch interval in seconds
#update:
#  method: prompt # can be: prompt | background | never
#  days: 14 # how often an update is checked for
#reporting: 'undetermined' # one of: 'on' | 'off' | 'undetermined'
#confirmOnQuit: false
## determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
#disableStartupPopups: false
#notARepository: 'prompt' # one of: 'prompt' | 'create' | 'skip'

#tmp
quitOnTopLevelReturn: false
keybinding:
  universal:
    quit: 'q'

    return: 'h'
    goInto: 'l'
    select: '<space>'
    # nextTab: '<c-h>' # original keybind. <backspace> somehow also makes it so <c-h> works...? so weird.
    nextTab: '<backspace>'
    prevTab: '<c-l>'

    prevItem: '<up>'
    nextItem: '<down>'
    prevItem-alt: 'k'
    nextItem-alt: 'j'
    prevBlock: '<left>'
    nextBlock: '<right>'
    prevBlock-alt: 'K'
    nextBlock-alt: 'J'
    # TODO: Figure out if overloading nextBlock-alt and togglePanel is ok.
    togglePanel: '<c-j>' 
    #togglePanel: '<tab>' # The default binding, but idk how I feel about it yet
    #togglePanel-alt: '<c-k>' # This key doesn't exist, but I'd like it to

    #quitWithoutChangingDirectory: 'Q'
    #prevPage: ',' # go to next page in list
    #nextPage: '.' # go to previous page in list
    #gotoTop: '<' # go to top of list
    #gotoBottom: '>' # go to bottom of list
    #scrollLeft: 'H' # scroll left within list view
    #scrollRight: 'L' # scroll right within list view
    #jumpToBlock: ['1', '2', '3', '4', '5'] # goto the Nth block / panel
    #nextMatch: 'n'
    #prevMatch: 'N'
    #optionMenu: 'x' # show help menu
    #optionMenu-alt1: '?' # show help menu
    #openRecentRepos: '<c-r>'
    #confirm: '<enter>'
    #confirm-alt1: 'y'
    #remove: 'd'
    #new: 'n'
    #edit: 'e'
    #openFile: 'o'
    #scrollUpMain: '<pgup>' # main panel scroll up
    #scrollDownMain: '<pgdown>' # main panel scroll down
    #scrollUpMain-alt1: 'K' # main panel scroll up
    #scrollDownMain-alt1: 'J' # main panel scroll down
    #scrollUpMain-alt2: '<c-u>' # main panel scroll up
    #scrollDownMain-alt2: '<c-d>' # main panel scroll down
    #executeCustomCommand: ':'
    #createRebaseOptionsMenu: 'm'
    #pushFiles: 'P'
    #pullFiles: 'p'
    #refresh: 'R'
    #createPatchOptionsMenu: '<c-p>'
    #nextScreenMode: '+'
    #prevScreenMode: '_'
    #undo: 'z'
    #redo: '<c-z>'
    #filteringMenu: '<c-s>'
    #diffingMenu: 'W'
    #diffingMenu-alt: '<c-e>' # deprecated
    #copyToClipboard: '<c-o>'
    #submitEditorText: '<enter>'
    #appendNewline: '<a-enter>'
    #extrasMenu: '@'
    #toggleWhitespaceInDiffView: '<c-w>'
    #increaseContextInDiffView: '}'
    #decreaseContextInDiffView: '{'
#  status:
#    checkForUpdate: 'u'
#    recentRepos: '<enter>'
#  files:
#    commitChanges: 'c'
#    commitChangesWithoutHook: 'w' # commit changes without pre-commit hook
#    amendLastCommit: 'A'
#    commitChangesWithEditor: 'C'
#    ignoreFile: 'i'
#    refreshFiles: 'r'
#    stashAllChanges: 's'
#    viewStashOptions: 'S'
#    toggleStagedAll: 'a' # stage/unstage all
#    viewResetOptions: 'D'
#    fetch: 'f'
#    toggleTreeView: '`'
#  branches:
#    createPullRequest: 'o'
#    viewPullRequestOptions: 'O'
#    checkoutBranchByName: 'c'
#    forceCheckoutBranch: 'F'
#    rebaseBranch: 'r'
#    mergeIntoCurrentBranch: 'M'
#    viewGitFlowOptions: 'i'
#    fastForward: 'f' # fast-forward this branch from its upstream
#    pushTag: 'P'
#    setUpstream: 'u' # set as upstream of checked-out branch
#    fetchRemote: 'f'
#  commits:
#    squashDown: 's'
#    renameCommit: 'r'
#    renameCommitWithEditor: 'R'
#    viewResetOptions: 'g'
#    markCommitAsFixup: 'f'
#    createFixupCommit: 'F' # create fixup commit for this commit
#    squashAboveCommits: 'S'
#    moveDownCommit: '<c-j>' # move commit down one
#    moveUpCommit: '<c-k>' # move commit up one
#    amendToCommit: 'A'
#    pickCommit: 'p' # pick commit (when mid-rebase)
#    revertCommit: 't'
#    cherryPickCopy: 'c'
#    cherryPickCopyRange: 'C'
#    pasteCommits: 'v'
#    tagCommit: 'T'
#    checkoutCommit: '<space>'
#    resetCherryPick: '<c-R>'
#    copyCommitMessageToClipboard: '<c-y>'
#    openLogMenu: '<c-l>'
#    viewBisectOptions: 'b'
#  stash:
#    popStash: 'g'
#  commitFiles:
#    checkoutCommitFile: 'c'
#  main:
#    toggleDragSelect: 'v'
#    toggleDragSelect-alt: 'V'
#    toggleSelectHunk: 'a'
#    pickBothHunks: 'b'
#  submodules:
#    init: 'i'
#    update: 'u'
#    bulkMenu: 'b'
